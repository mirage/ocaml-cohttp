name: Main workflow

on:
  pull_request:
  push:
  schedule:
    # Prime the caches every Monday
    - cron: 0 1 * * MON

jobs:
  unix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ocaml-compiler:
          - 4.08.x
          - 4.09.x
          - 4.10.x
          - 4.11.x
          - 4.12.x
          - 4.13.x
          - ocaml-variants.4.12.0+domains

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: yarn --frozen-lockfile
        working-directory: cohttp_lwt_jsoo_test

      - run: echo "PKG_CONFIG_PATH=$(brew --prefix openssl)/lib/pkgconfig" >>"$GITHUB_ENV"
        if: ${{ matrix.os == 'macos-latest' }}

      - run: opam install . --deps-only --with-test

      - run: opam exec -- make build

      - run: opam exec -- make test

      - run: opam exec -- make js-test

  win32:
    strategy:
      fail-fast: false
      matrix:
        ocaml-compiler:
          - 4.08.x
          - 4.09.x
          - 4.10.x
          - 4.11.x
          - 4.12.x
          - 4.13.x

    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-local-packages: |
            *.opam
            !cohttp-async.opam

      - name: Install npm packages
        run: yarn --frozen-lockfile
        working-directory: cohttp_lwt_jsoo_test

      - run: opam install cohttp-lwt-jsoo cohttp-lwt-unix cohttp-lwt cohttp-mirage cohttp-top cohttp --deps-only --with-test

      - run: opam exec -- make build-win32

      - run: opam exec -- make test-win32

      - run: opam exec -- make js-test-win32
