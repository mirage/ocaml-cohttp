# OASIS_START
# DO NOT EDIT (digest: 60d866b691693b6df464ef8e277a73dd)
version = "0.10.1"
description = "HTTP library for Lwt, Async and Mirage"
requires = "re.emacs stringext uri uri.services fieldslib sexplib"
archive(byte) = "cohttp.cma"
archive(byte, plugin) = "cohttp.cma"
archive(native) = "cohttp.cmxa"
archive(native, plugin) = "cohttp.cmxs"
exists_if = "cohttp.cma"
package "lwt-core" (
 version = "0.10.1"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "lwt uri cohttp"
 archive(byte) = "cohttp_lwt.cma"
 archive(byte, plugin) = "cohttp_lwt.cma"
 archive(native) = "cohttp_lwt.cmxa"
 archive(native, plugin) = "cohttp_lwt.cmxs"
 exists_if = "cohttp_lwt.cma"
)

package "lwt" (
 version = "0.10.1"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "cohttp.lwt-core unix lwt.unix lwt.ssl"
 archive(byte) = "cohttp_lwt_unix.cma"
 archive(byte, plugin) = "cohttp_lwt_unix.cma"
 archive(native) = "cohttp_lwt_unix.cmxa"
 archive(native, plugin) = "cohttp_lwt_unix.cmxs"
 exists_if = "cohttp_lwt_unix.cma"
)

package "async" (
 version = "0.10.1"
 description = "HTTP library for Lwt, Async and Mirage"
 requires = "uri cohttp threads async async_ssl"
 archive(byte) = "cohttp_async.cma"
 archive(byte, plugin) = "cohttp_async.cma"
 archive(native) = "cohttp_async.cmxa"
 archive(native, plugin) = "cohttp_async.cmxs"
 exists_if = "cohttp_async.cma"
)
# OASIS_STOP

